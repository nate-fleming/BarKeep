@model BarKeep.Models.Cocktail

@{
    ViewData["Title"] = "Edit";
}


<h1>@Model.Name</h1>

<form asp-action="Edit">
    <div class="row">
        <div class="col-md-6">
            <div class="card bg-gradient-light border-warning mb-3" data-aos="fade-right">
                <div class="card-header">
                    <h4>Edit Cocktail</h4>
                </div>
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="CocktailId" />
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="AlcoholTypeId" class="control-label"></label>
                        <select asp-for="AlcoholTypeId" class="form-control" asp-items="ViewBag.AlcoholTypeId"></select>
                        <span asp-validation-for="AlcoholTypeId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Source" class="control-label"></label>
                        <input asp-for="Source" class="form-control" />
                        <span asp-validation-for="Source" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="GlasswareId" class="control-label"></label>
                        <select asp-for="GlasswareId" class="form-control" asp-items="ViewBag.GlasswareId"></select>
                        <span asp-validation-for="GlasswareId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Garnish" class="control-label"></label>
                        <input asp-for="Garnish" class="form-control" />
                        <span asp-validation-for="Garnish" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ImgUrl" class="control-label"></label>
                        <input asp-for="ImgUrl" class="form-control" />
                        <span asp-validation-for="ImgUrl" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col col-md-6">
            <div class="card border-dark mb-3" data-aos="fade-down">
                <div class="card-header">
                    <h4>Edit Ingredients</h4>
                </div>
                <div class="card-body">
                    <div id="ingredientsDiv">
                        @for (int i = 0; i < Model.Ingredients.Count; i++)
                        {
                            <div class="row">
                                <div class="col-sm-3">
                                    <input type="text" class="form-control" asp-for="Ingredients[i].Amount" placeholder="Amount">
                                </div>
                                <div class="col-sm-8 input-group">
                                    <input type="text" class="form-control" asp-for="Ingredients[i].Name" placeholder="Ingredient Name">
                                    <div class="input-group-append">
                                        <button class="btn btn-success" type="button" onclick="addEditIngredientInput()">Add</button>
                                    </div>
                                </div>
                            </div>
                        }
                        <script type="text/javascript">
                            let editCount = @Model.Ingredients.Count;
                            function getDynamicIngredientInput(values) {
                                return `<div class="row"><div class="col-sm-3"><input type="text" name="Ingredients[${editCount}].Amount" class="form-control" placeholder="Amount"></div > <div class="col-sm-8 input-group"><input type="text" name="Ingredients[${editCount}].Name" class="form-control" placeholder="Ingredient Name"><div class="input-group-append"><button class="btn btn-success" type="button" onclick="addEditIngredientInput()" value="Add">Add</button><button class="btn btn-danger" type="button" onclick="removeEditIngredientInput(this)" value="Remove">Remove</button></div></div></div>`;
                            }

                            function addEditIngredientInput() {
                                editCount += 1;
                                var div = document.createElement('DIV');
                                div.innerHTML = getDynamicIngredientInput("");
                                document.getElementById("ingredientsDiv").appendChild(div);
                            }

                            function removeEditIngredientInput(div) {
                                editCcount -= 1;
                                var x = document.getElementById("ingredientsDiv").lastChild;
                                document.getElementById("ingredientsDiv").removeChild(x);
                            }
                        </script>
                    </div>
                </div>
            </div>
            <div class="card border-dark mb-3" data-aos="fade-left">
                <div class="card-header">
                    <h4>Edit Instructions</h4>
                </div>
                @*<div class="card-body">
                        <dl>
                            @foreach (var instruction in Model.Instructions)
                            {
                                <dd>@Html.DisplayFor(modelItem => instruction.Number).</dd>
                                <dd>
                                    @Html.DisplayFor(modelItem => instruction.Description)
                                </dd>
                            }
                        </dl>
                    </div>*@
            </div>

        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
