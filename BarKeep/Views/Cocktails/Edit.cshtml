@model BarKeep.Models.Cocktail

@{
    ViewData["Title"] = "Edit";
}

@using (Html.BeginForm("Edit",
 "Products",
 FormMethod.Post,
 new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()



    <h1>@Model.Name</h1>

    <form asp-action="Edit">
        <div class="row">
            <div class="col-md-6">
                <div class="card bg-gradient-light border-warning mb-3" data-aos="fade-right">
                    <div class="card-header">
                        <h4>Edit Cocktail</h4>
                    </div>
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="CocktailId" />
                        <div class="form-group">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="AlcoholTypeId" class="control-label"></label>
                            <select asp-for="AlcoholTypeId" class="form-control" asp-items="ViewBag.AlcoholTypeId"></select>
                            <span asp-validation-for="AlcoholTypeId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Source" class="control-label"></label>
                            <input asp-for="Source" class="form-control" />
                            <span asp-validation-for="Source" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="GlasswareId" class="control-label"></label>
                            <select asp-for="GlasswareId" class="form-control" asp-items="ViewBag.GlasswareId"></select>
                            <span asp-validation-for="GlasswareId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Garnish" class="control-label"></label>
                            <input asp-for="Garnish" class="form-control" />
                            <span asp-validation-for="Garnish" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Descriptor 1</label>
                            <input hidden asp-for="CocktailDescriptors[0].CocktailId" />
                            <input hidden asp-for="CocktailDescriptors[0].CocktailDescriptorId" />
                            <select asp-for="CocktailDescriptors[0].DescriptorId" class="form-control" asp-items="ViewBag.Descriptor1Id"></select>
                        </div>
                        <div class="form-group">
                            <input hidden asp-for="CocktailDescriptors[1].CocktailId" />
                            <input hidden asp-for="CocktailDescriptors[1].CocktailDescriptorId" />
                            <label class="control-label">Descriptor 2</label>
                            <select asp-for="CocktailDescriptors[1].DescriptorId" class="form-control" asp-items="ViewBag.Descriptor2Id"></select>
                        </div>
                        <div class="form-group">
                            <label asp-for="ImgUrl" class="control-label"></label>
                            <input hidden asp-for="ImgUrl" class="form-control" />
                            <input type="file" name="file" id="file" />
                            <span asp-validation-for="ImgUrl" class="text-danger"></span>
                        </div>
                        <div class="form-group input-group-group-sm" hidden>
                            <input asp-for="UserId" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col col-md-6">
                <div class="card border-dark mb-3" data-aos="fade-down">
                    <div class="card-header">
                        <h4>Edit Ingredients</h4>
                    </div>
                    <div class="card-body">
                        <div id="ingredientsDiv">
                            @for (int i = 0; i < Model.Ingredients.Count; i++)
{
                                <div class="row">
                                    <input hidden asp-for="Ingredients[i].IngredientId" />
                                    <input hidden asp-for="Ingredients[i].CocktailId" />
                                    <div class="col-sm-2">
                                        <input type="text" class="form-control" asp-for="Ingredients[i].Amount" placeholder="Amount">
                                    </div>
                                    <div class="col-sm-10 input-group">
                                        <input type="text" class="form-control" asp-for="Ingredients[i].Name" placeholder="Ingredient Name">
                                        <div class="input-group-append">
                                            <button class="btn btn-success" type="button" onclick="addEditIngredientInput()"><i class="fas fa-plus-circle"></i></button>
                                            @if (i > 0)
{
                                                <button class="btn btn-danger" type="button" onclick="removeEditIngredientInput(this)"><i class="fas fa-minus-circle"></i></button>
}
                                        </div>
                                    </div>
                                </div>
}

                        </div>
                    </div>
                </div>
                <div class="card border-dark mb-3" data-aos="fade-left">
                    <div class="card-header">
                        <h4>Edit Instructions</h4>
                    </div>
                    <div class="card-body">
                        <div id="instructionsDiv">
                            @for (int i = 0; i < Model.Instructions.Count; i++)
{
                                <div class="row">
                                    <input hidden asp-for="Instructions[i].InstructionId" />
                                    <input hidden asp-for="Instructions[i].CocktailId" />
                                    <div class="col-sm-1">
                                        <input type="text" class="form-control" asp-for="Instructions[i].Number" placeholder="Number">
                                    </div>
                                    <div class="col-sm-11 input-group">
                                        <input type="text" class="form-control" asp-for="Instructions[i].Description" placeholder="Description">
                                        <div class="input-group-append">
                                            <button class="btn btn-success" type="button" onclick="addEditInstructionInput()"><i class="fas fa-plus-circle"></i></button>
                                            @if (i > 0)
{
                                                <button class="btn btn-danger" type="button" onclick="removeEditInstructionInput(this)"><i class="fas fa-minus-circle"></i></button>
}
                                        </div>
                                    </div>
                                </div>
}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <input id="cocktailEditBtn" type="submit" value="Save" class="btn btn-primary" onclick="disableEditBtn()" />
            <button id="loadingBtn" class="btn btn-primary hide" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                Loading...
            </button>
        </div>
    </form>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script type="text/javascript">
                            let editCount = @Model.Ingredients.Count - 1;
                            function getEditIngredientInput(values) {
                                return `<div class="row"><input hidden asp-for="Ingredients[${editCount}].IngredientId" /><input hidden name="Ingredients[${editCount}].CocktailId" value="@Model.CocktailId" /><div class="col-sm-2"><input type="text" name="Ingredients[${editCount}].Amount" class="form-control" placeholder="Amount"></div > <div class="col-sm-10 input-group"><input type="text" name="Ingredients[${editCount}].Name" class="form-control" placeholder="Ingredient Name"><div class="input-group-append"><button class="btn btn-success" type="button" onclick="addEditIngredientInput()" value="Add"><i class="fas fa-plus-circle"></i></button><button class="btn btn-danger" type="button" onclick="removeEditIngredientInput(this)" value="Remove"><i class="fas fa-minus-circle"></i></button></div></div></div>`;
                            }

                            function addEditIngredientInput() {
                                editCount += 1;
                                var div = document.createElement('DIV');
                                div.innerHTML = getEditIngredientInput("");
                                document.getElementById("ingredientsDiv").appendChild(div);
                            }

                            function removeEditIngredientInput(div) {
                                editCount -= 1;
                                var x = document.getElementById("ingredientsDiv").lastElementChild;
                                console.log(x);
                                document.getElementById("ingredientsDiv").removeChild(x);
                            }

                            let editInstructionCount = @Model.Instructions.Count - 1;
                            function getEditInstructionInput(values) {
                                return `<div class="row"><input hidden asp-for="Instructions[${editCount}].InstructionId" /><input hidden name="Instructions[${editCount}].CocktailId" value="@Model.CocktailId" /><div class="col-sm-2"><input type="text" name="Instructions[${editInstructionCount}].Number" class="form-control" placeholder="Number"></div > <div class="col-sm-10 input-group"><input type="text" name="Instructions[${editInstructionCount}].Description" class="form-control" placeholder="Instruction"><div class="input-group-append"><button class="btn btn-success" type="button" onclick="addEditInstructionInput()" value="Add"><i class="fas fa-plus-circle"></i></button><button class="btn btn-danger" type="button" onclick="removeEditInstructionInput(this)" value="Remove"><i class="fas fa-minus-circle"></i></button></div></div></div>`;
                            }

                            function addEditInstructionInput() {
                                editInstructionCount += 1;
                                var div = document.createElement('DIV');
                                div.innerHTML = getEditInstructionInput("");
                                document.getElementById("instructionsDiv").appendChild(div);
                            }

                            function removeEditInstructionInput(div) {
                                editInstructionCount -= 1;
                                var x = document.getElementById("instructionsDiv").lastElementChild;
                                document.getElementById("instructionsDiv").removeChild(x);
                            }
        </script>
    }
