@model BarKeep.Models.Cocktail
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    var user = await UserManager.GetUserAsync(User);
}

<h1>@Html.DisplayFor(model => model.Name)</h1>

<div class="row">
    @*<h4>@Html.DisplayFor(model => model.Name)</h4>*@
    @*<hr />*@
    <div class="col col-md-5">
        <div class="card mb-3" data-aos="fade-right">
            @*<h1 class="card-header"></h1>*@
            <div class="card-header">
                <h5 class="card-title"><strong>Alcohol</strong>: @Html.DisplayFor(model => model.AlcoholType.Name)</h5>
                <h6 class="card-subtitle"><strong>Source</strong>: @Html.DisplayFor(model => model.Source)</h6>
                <h6 class="mt-2">@Model.CocktailDescriptors[0].Descriptor.Description / @Model.CocktailDescriptors[1].Descriptor.Description</h6>
            </div>
            <div class="card-body">
                <img style="height: 200px; width: 100%; display: block;" src="@Url.Content(Model.ImgUrl)" alt="Card image">
                @*@foreach (var descriptor in Model.CocktailDescriptors)
                    {
                        <p class="card-text">@Html.DisplayFor(modelItem => descriptor.Descriptor.Description)</p>
                    }*@

                @*<div class="card-body">
                        <p class="card-text text-white-50">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    </div>*@
                <ul class="list-group  mt-4 mb-2">
                    <li class="list-group-item"><strong>@Html.DisplayNameFor(model => model.Garnish)</strong>: @Html.DisplayFor(model => model.Garnish)</li>
                    <li class="list-group-item"><strong>@Html.DisplayNameFor(model => model.Glassware)</strong>: @Html.DisplayFor(model => model.Glassware.Name)</li>
                    <li class="list-group-item"><strong>@Html.DisplayNameFor(model => model.User.FullName)</strong>: @Html.DisplayFor(model => model.User.FullName)</li>
                </ul>
                @if (user.Id == Model.UserId)
                {
                    <a class="card-link" asp-action="Edit" asp-route-id="@Model.CocktailId">Edit</a>
                }
                <a class="card-link" asp-action="Index">Back to List</a>
                <a class="card-link" asp-action="Favorite" asp-route-userId="@Model.UserId" asp-route-cId="@Model.CocktailId">Add To Favorites</a>
            </div>

        </div>
    </div>
    <div class="col col-md-6">
        <div data-aos="fade-down">
            <div class="card-header">
                <h4>Ingredients</h4>
            </div>
            <div class="card-body">
                <dl>
                    @foreach (var ingredient in Model.Ingredients)
                    {
                        <dd>@Html.DisplayFor(modelItem => ingredient.Amount)  @Html.DisplayFor(modelItem => ingredient.Name)</dd>
                    }
                </dl>
            </div>
        </div>
        <div data-aos="fade-left">
            <div class="card-header">
                <h4>Instructions</h4>
            </div>
            <div class="card-body">
                <dl>
                    @foreach (var instruction in Model.Instructions)
                    {
                        <dd>@Html.DisplayFor(modelItem => instruction.Number).  @Html.DisplayFor(modelItem => instruction.Description)</dd>
                    }
                </dl>
            </div>
        </div>
    </div>
    @*<dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Source)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Source)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Garnish)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Garnish)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImgUrl)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ImgUrl)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AlcoholType)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AlcoholType.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Glassware)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Glassware.Name)
            </dd>
        </dl>*@
</div>
@*<div>
        <a asp-action="Edit" asp-route-id="@Model.CocktailId">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>*@
<div>
    @if (user.Id == Model.UserId)
    {
        <a asp-action="Edit" asp-route-id="@Model.CocktailId"></a>
    }

    <a asp-action="Index"></a>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.CocktailId"></a>
    <a asp-action="Index"></a>
</div>
